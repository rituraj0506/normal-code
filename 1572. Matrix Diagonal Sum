
T(C)=o(n^2)
S(C)=O(1)

int diagonalSum(vector<vector<int>>& mat) {
        int n=mat.size();
        int sum=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
               if(i==j)
                   sum+=mat[i][j];
                if(i+j==n-1)
                    sum+=mat[i][j];
            }
        }
        if(n%2!=0)
        return sum-mat[n/2][n/2];
        else
            return sum;
    }
    
    T(C)=O(N)
    S(C)=O(1)
    int diagonalSum(vector<vector<int>>& mat) {
        int n=mat.size();
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum+=mat[i][i];
            sum+=mat[i][n-i-1];
        }
        if(n%2==0)
            return sum;
        else
            return sum-mat[n/2][n/2];
    }
